trigger: none
#  - master

pool:
  vmImage: 'ubuntu-16.04'

variables:
  nlw_token: $(secret_nlw_token)
  zone_code: 9h2lZ
  PYTHONUNBUFFERED: 1

# create sidecar containers, attach them to a zone; provide supply this pipeline demands
resources:
  containers:
  - container: neoload_ctrl
    image: neotys/neoload-controller:latest
    env: { MODE: Managed, NEOLOADWEB_TOKEN: $(nlw_token), ZONE: $(zone_code) }
  - container: lg1
    image: neotys/neoload-loadgenerator:latest
    env: { NEOLOADWEB_TOKEN: $(nlw_token), ZONE: $(zone_code), LG_HOST=lg1, LG_PORT=7100 }
  - container: lg2
    image: neotys/neoload-loadgenerator:latest
    env: { NEOLOADWEB_TOKEN: $(nlw_token), ZONE: $(zone_code), LG_HOST=lg2, LG_PORT=7100 }

jobs:
- job: RunLoadTest
  #condition: eq(1,2)
  displayName: Run NeoLoad Test
  services:
    neoload_ctrl: neoload_ctrl
    lg1: lg1
    lg2: lg2
  steps:
  - task: UsePythonVersion@0
    inputs:
      versionSpec: '3.6'

  - task: Bash@3
    displayName: Install NeoLoad
    continueOnError: false
    inputs:
      targetType: 'inline'
      script: |
        pip install neoload
        neoload --version
        neoload --profile docker --token $(nlw_token) --zone $(zone_code)

  - task: Bash@3
    displayName: Run NeoLoad Test
    continueOnError: true
    inputs:
      targetType: 'inline'
      script: |
        cd $(Build.SourcesDirectory)

        neoload --scenario smokeScenario \
                -f example_test/default.yaml \
                -f example_test/slas/uat.yaml \
                --testname "Azure_sidecars_$(Build.BuildNumber)" \
                --testdesc "Azure example load test with sidecars; $(Build.BuildUri)" \
                --attach zone#2 \
                --junitsla $(Common.TestResultsDirectory)/neoload-slas.xml

  - task: Bash@3
    displayName: Retain Controller Logs
    continueOnError: true
    inputs:
      targetType: 'inline'
      script: |
        CTRL_ID=$(docker ps --filter "name=neoload_ctrl" --format "{{.ID}}")
        echo "Controller NeoLoad logs: $CTRL_ID"
        docker cp $CTRL_ID:/home/neoload/.neotys/neoload/v7.1/logs/ $(Common.TestResultsDirectory)
        cat $(Common.TestResultsDirectory)/logs/neoload.log

  - task: PublishTestResults@2
    inputs:
      testResultsFormat: 'JUnit'
      testResultsFiles: $(Common.TestResultsDirectory)/neoload-slas.xml
      failTaskOnFailedTests: true
